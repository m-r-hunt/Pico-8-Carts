pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--mobius station
--by maximilian hunt
--(c) 2020 cc-by-sa

--todo

--day summary screen
--cap crate speed

--done
--multi delivery
--multi fment
--animated crates
--switch to more small crates(?)
--fix crate pathfinding around joins(ish)
--better ui on fment
--banners/transitions between states
--reconceptualize crate management as push/pull
--redraw crates as nicer icons

-->8
--core

loop_width=48*8
half_loop_width=24*8

function new_game()
	px=0
	pcarried=nil
	cargo={}
	for i=1,24 do
		cargo[i]={}
	end
	inventory={}
	crates={}
end

--cargo:1 is the a-side, 7 is b-side
function get_empty_slot(row,aside)
	if aside then
		for i=7,1,-1 do
			if not cargo[row][i] then
				return i
			end
		end
		return 1
	else
		for i=1,7 do
			if not cargo[row][i] then
				return i
			end
		end
		return 7
	end
end

function get_filled_slot(row,aside)
	if aside then
		for i=1,7 do
			if cargo[row][i] then
				return i
			end
		end
		return 7
	else
		for i=7,1,-1 do
			if cargo[row][i] then
				return i
			end
		end
		return 1
	end
end

function get_target_crate()
	local row=(px%half_loop_width)\8+1
	local aside=px<half_loop_width
	local pos
	if pcarried then
		pos=get_empty_slot(row,aside)
	else
		pos=get_filled_slot(row,aside)
	end
	return row,pos
end

function push_crate(crate,row,aside)
	if aside then
		if not cargo[row][1] then
			--empty space so we can just push in there
			for i=2,7 do
				if cargo[row][i] then
					crate.target="storage"
					crate.targetshelf=row
					crate.targetpos=i-1
					cargo[row][i-1]=crate
					return
				end
			end
			crate.target="storage"
			crate.targetshelf=row
			crate.targetpos=7
			cargo[row][7]=crate
			return
		end
		local emptyspace
		for i=2,7 do
			if not cargo[row][i] then
				emptyspace=i
				break
			end
		end
		if not emptyspace then
			--no free slot in this row, can't push
			return
		end
		--push cargo forward to empty space
		for i=emptyspace,2,-1 do
			cargo[row][i]=cargo[row][i-1]
			cargo[row][i-1]=nil
			cargo[row][i].targetpos=i
		end
		--slot new crate in at the end
		crate.target="storage"
		crate.targetshelf=row
		crate.targetpos=1
		cargo[row][1]=crate
		return
	else
		if not cargo[row][7] then
			--empty space so we can just push in there
			for i=6,1,-1 do
				if cargo[row][i] then
					crate.target="storage"
					crate.targetshelf=row
					crate.targetpos=i+1
					cargo[row][i+1]=crate
					return
				end
			end
			crate.target="storage"
			crate.targetshelf=row
			crate.targetpos=1
			cargo[row][1]=crate
			return
		end
		local emptyspace
		for i=6,1,-1 do
			if not cargo[row][i] then
				emptyspace=i
				break
			end
		end
		if not emptyspace then
			--no free slot in this row, can't push
			return
		end
		--push cargo forward to empty space
		for i=emptyspace,6 do
			cargo[row][i]=cargo[row][i+1]
			cargo[row][i+1]=nil
			cargo[row][i].targetpos=i
		end
		--slot new crate in at the end
		crate.target="storage"
		crate.targetshelf=row
		crate.targetpos=7
		cargo[row][7]=crate
		return
	end
end

function update_player()
	if (btn(0)) px-=1
	if (btn(1)) px+=1
	if (px<0) px+=loop_width
	if (px>=loop_width) px-=loop_width
	if btnp(4) then
		local n,pos=get_target_crate()
		if not pcarried and cargo[n][pos] then
			pcarried=cargo[n][pos]
			pcarried.target="player"
			cargo[n][pos]=nil
		elseif pcarried then
			push_crate(pcarried,n,px<half_loop_width)
			pcarried=nil
		end
	end
end

function closest_in_m_space(x,y,tx,ty)
	local candidates={
		{tx,ty},
		{tx-half_loop_width,112-ty},
		{tx+half_loop_width,112-ty},
	}
	local ox,oy
	local mindist=32000
	for i=1,#candidates do
		local dist=abs(candidates[i][1]-x)+abs(candidates[i][2]-y)
		if dist<mindist then
			mindist=dist
			ox=candidates[i][1]
			oy=candidates[i][2]
		end
	end
	return ox,oy
end

function get_crate_target_pos(c)
	if c.target=="storage" then
		return closest_in_m_space(c.x,c.y,(c.targetshelf-1)*8,12*8-c.targetpos*8)
	elseif c.target=="player" then
		local tx=px-8
		local ty=11*8
		if tx>=half_loop_width then
			tx-=half_loop_width
			ty=112-ty
		end
		return closest_in_m_space(c.x,c.y,tx,ty)
	end
end

function update_crates()
	for _,c in pairs(crates) do
		local tx,ty=get_crate_target_pos(c)
		c.x=c.x+(tx-c.x)/2
		c.y=c.y+(ty-c.y)/2
		if abs(c.x-tx)<0.1 and abs(c.y-ty)<0.1 then
			c.x=tx
			c.y=ty
		end
		if c.x<0 then
			c.x+=half_loop_width
		end
		if c.x>=half_loop_width then
			c.x-=half_loop_width
		end
	end
end

function draw_loop()
	map(0,0,0,0,48,16)
end

function draw_objects()
	for _,crate in pairs(crates) do
		spr(crate.type,crate.x,crate.y)
		spr(crate.type,crate.x+half_loop_width,128-crate.y)
	end

	local n,pos=get_target_crate()
	local y1=12*8-pos*8
	local y2=128-y1
	spr(108,(n-1)*8,y1,2,2)
	spr(108,half_loop_width+(n-1)*8,y2,2,2)

	spr(64,px-4,112)
end

function draw_world()
	cls()

	camera(px-60+loop_width)
	draw_loop()

	camera(px-60)
	draw_loop()

	camera(px-60-loop_width)
	draw_loop()

	camera(px-60+loop_width)
	draw_objects()

	camera(px-60)
	draw_objects()

	camera(px-60-loop_width)
	draw_objects()

	camera()
end

-->8
--delivery

crate_spawn_x=24
crate_spawn_y=14*8

function row_has_space(x)
	for i=1,7 do
		if not cargo[x][i] then
			return true
		end
	end
	return false
end

function add_crate(c)
	inventory[c]=inventory[c] and inventory[c]+1 or 1
	for x=3,27 do
		if (x>=25) x-=24
		if row_has_space(x) then
			local newc={type=c,x=crate_spawn_x,y=crate_spawn_y,target="storage",targetshelf=1+x,targetpos=pos}
			add(crates,newc)
			push_crate(newc,x,true)
			return
		end
	end
	assert(false)
end

function random_crate_type()
	local c=128+(flr(rnd(32)))
	return c
end

total_slots=24*3
max_fraction=flr(2/3*total_slots)
min_delivered=4
max_delivered=10

function count_inventory()
	local total=0
	for _,n in pairs(inventory) do
		total+=n
	end
	return total
end

function enter_delivery_prep()
	local filled_slots=count_inventory()
	local max_delivered=mid(1,max_fraction-filled_slots,max_delivered)
	delivery_type=random_crate_type()
	if max_delivered>min_delivered then
		delivery_n=ceil(min_delivered+rnd(max_delivered-min_delivered))
	else
		delivery_n=min_delivered
	end
	transition("delivering")
end

function enter_delivering()
	add_crate(delivery_type)
	delivery_n-=1
end

delivery_time=1.5

function update_delivery()
	update_player()
	update_crates()

	if t>=delivery_time then
		if delivery_n>=0 then
			transition("delivering")
		else
			transition("chill")
		end
	end
end

function draw_delivery()
	draw_world()
	print("new goods incoming",1,1,7)
end

-->8
--chill

function update_chill()
	update_player()
	update_crates()

	if btnp(5) and px>=25*8 and px<=26*8 then
		transition("fment")
	end
end

function draw_action_prompt()
	local x=57
	local y=105
	print("❎",x-1,y,0)
	print("❎",x+1,y,0)
	print("❎",x,y-1,0)
	print("❎",x,y+1,0)
	print("❎",x,y,7)
end

function draw_chill()
	draw_world()
	if px>=25*8 and px<=26*8 then
		draw_action_prompt()
	end
	print("press button when ready",1,1,7)
end

-->8
--fment

function enter_fment()
	local types={}
	for type,number in pairs(inventory) do
		if number>0 then
			add(types,type)
		end
	end
	target=rnd(types)
	local max_target_number=min(3,inventory[target])
	target_number=ceil(rnd(max_target_number))
	time_limit=10
end

function update_fment()
	update_player()
	update_crates()
	if btnp(5) and px>=26*8 and px<=28*8 and pcarried and pcarried.type==target then
		del(crates,pcarried)
		pcarried=nil
		inventory[target]-=1
		target_number-=1
		if target_number<=0 then
			transition("summary")
		end
	elseif t>=time_limit then
		transition("gameover")
	end
	
end

function draw_fment()
	draw_world()
	if px>=26*8 and px<=28*8 and pcarried and pcarried.type==target then
		draw_action_prompt()
	end
	print("deliver:   "..target_number,2,1,7)
	spr(target,35,-1)
end

-->8
--summary

function update_summary()
	if btnp()&0b110000~=0 then
		transition("delivery_prep")
	end
end

function draw_summary()
	draw_world()
	rectfill(20,20,108,108,13)
	print("summary",50,30,0)
end

-->8
--menus

function update_gameover()
	if btnp()&0b110000~=0 then
		transition("title")
	end
end

function draw_gameover()
	cls()
	print("game over",60,64,7)
	print("🅾️/❎: return to title",60,78,7)
end

function update_title()
	if btnp()&0b110000~=0 then
		new_game()
		transition("delivery_prep")
	end
end

function draw_title()
	cls()
	print("mobius station",36,22,7)
	print("by maximilian hunt",28,30,7)
	print("🅾️/❎: start game",30,78,7)
	print("Controls: 🅾️: pickup/drop crate\n",2,90,7)
	print("❎: interact",42,96,7)
	print("NB on keyboard 🅾️=z and ❎=x",10,110,7)
end

-->8
--state machine & callbacks

states={
	title={update=update_title,draw=draw_title},

	delivery_prep={enter=enter_delivery_prep},
	delivering={enter=enter_delivering,update=update_delivery,draw=draw_delivery},
	chill={update=update_chill,draw=draw_chill},
	fment={enter=enter_fment,update=update_fment,draw=draw_fment},
	summary={update=update_summary,draw=draw_summary},

	gameover={update=update_gameover,draw=draw_gameover},
}

function transition(new_state)
	current_state=new_state
	t=0
	if states[new_state].enter then
		states[new_state].enter()
	end
end

function _init()
	new_game()
	transition("title")
	--transition("chill")
end

function _update60()
	t+=1/60
	states[current_state].update()
end

function _draw()
	states[current_state].draw()
end
__gfx__
00000000000000005555555566666666000000000000000000000000000000000000000000000000000000000000000086666666000000006888888888888886
00000000000000006666666666666666000000000000000000000000000000000000000000000000000000000000000086666866000000008666666886666668
00600600000007005555555566666666000000000000000000000000000000000000000000000000000000000000000086666886000000008668886886866868
00066000000000006666666666666666000000000000000000000000000000000000000000000000000000000000000088888888000000008666866886886868
00066000000000006555556666666666000000000000000000000000000000000000000000000000000000000000000088888888000000008666866886886868
00600600007000005566655566666666000000000000000000000000000000000000000000000000000000000000000086666886000000008666866886868868
00000000000000006666666666666666000000000000000000000000000000000000000000000000000000000000000086666866000000008668886886866868
00000000000000005555555566666666000000000000000000000000000000000000000000000000000000000000000086666666000000008666666886666668
00000000000000006dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd68666666886666668
0000000000000000d66656666666566dd66555666665556dd66656666666566dd66555666665556dd66556666666566dd66556666665556d8666666886666668
0000000000000000d66556666665656dd66656666665665dd66565666665656dd66566666665665dd66665666665656dd66665666665665d8666666886666668
0000000000000000d66656666665656dd66656666665556dd66665666665656dd66656666665556dd66665666665656dd66555666665556d8666666886666668
0000000000000000d66656666665556dd66656666665665dd66656666665556dd66665666665665dd66555666665556dd66665666665665d8666666886666668
0000000000000000d66656666665656dd66556666665665dd66566666665656dd66565666665665dd66665666665656dd66665666665665d8666666886666668
0000000000000000d66555666665656dd66656666665556dd66555666665656dd66656666665556dd66556666665656dd66556666665556d8666666886666668
00000000000000006dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd68666666886666668
00000000000000006dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66111111111111116
0000000000000000d66656666665556dd66555666665656dd66656666665556dd66555666665656dd66556666665556dd66556666665656d1666666666666661
0000000000000000d66556666665665dd66656666665656dd66565666665665dd66566666665656dd66665666665665dd66665666665656d166d66d66d6ddd61
0000000000000000d66656666665665dd66656666665556dd66665666665665dd66656666665556dd66665666665665dd66555666665556d16d6d6d66d66d661
0000000000000000d66656666665556dd66656666665656dd66656666665556dd66665666665656dd66555666665556dd66665666665656d16d6d6d66d66d661
0000000000000000d66656666665665dd66556666665656dd66566666665665dd66565666665656dd66665666665665dd66665666665656d16d6d6d66d66d661
0000000000000000d66555666665556dd66656666666566dd66555666665556dd66656666666566dd66556666665556dd66556666666566d166d666dd666d661
00000000000000006dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd66dddddddddddddd61666666666666661
000000000000000066666666eeeeeeee666886666657756600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065555555eeeeeeee668e88666657756600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee662882666657756600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee665225666657756600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee665775666652256600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee665775666628826600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee66577566668e886600000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000065111111eeeeeeee665775666668866600000000000000000000000000000000000000000000000000000000000000001666666116666661
5050050500000000eeeeeeeeeeeeeeee666bb6666624426600000000000000000000000000000000000000000000000000000000000000008666666886666668
0505505000000000eeeeeeeeeeeeeeee666bb6666224442600000000000000000000000000000000000000000000000000000000000000008666666886666668
0516615000000000eeeeeeeeeeeeeeee663bb3662244444200000000000000000000000000000000000000000000000000000000000000008666666886666668
0d56c5d000000000eeeeeeeeeeeeeeeeb33bb33b2444444200000000000000000000000000000000000000000000000000000000000000008666666886666668
0566665000000000eeeeeeeeeeeeeeeebb3bb3bb2444444400000000000000000000000000000000000000000000000000000000000000008666666886666668
0155551000000000eeeeeeeeeeeeeeee3bbbbbb34444444400000000000000000000000000000000000000000000000000000000000000008666666886666668
56d66d6500000000eeeeeeeeeeeeeeee63bbbb36553bb35500000000000000000000000000000000000000000000000000000000000000008666666886666668
0555555000000000eeeeeeeeeeeeeeee663bb366665bb56600000000000000000000000000000000000000000000000000000000000000008666666886666668
00000000000000000000000000000000665bb566663bb36600000000000000000000000000000000000000000000000000000000000000008666666886666668
00000000000000000000000000000000553bb35563bbbb3600000000000000000000000000000000000000000000000000000000000000008668886886866868
00000000000000000000000000000000444444443bbbbbb300000000000000000000000000000000000000000000000000000000000000008666866886868868
0000000000000000000000000000000024444444bb3bb3bb00000000000000000000000000000000000000000000000000000000000000008666866886886868
0000000000000000000000000000000024444442b33bb33b00000000000000000000000000000000000000000000000000000000000000008666866886886868
0000000000000000000000000000000022444442663bb36600000000000000000000000000000000000000000000000000000000000000008668886886866868
0000000000000000000000000000000062244426666bb66600000000000000000000000000000000000000000000000000000000000000008666666886666668
0000000000000000000000000000000066244266666bb66600000000000000000000000000000000000000000000000000000000000000006888888888888886
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000c000000001666666116666661
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000cc00000001666666116666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666116666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666116666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666116666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666116666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666116666661
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000cc00000001666666116666661
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000c000000001666666666666661
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166d666dd666d661
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016d6d6d66d66d661
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016d6d6d66d66d661
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016d6d6d66d66d661
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000166d66d66d6ddd61
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001666666666666661
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006111111111111116
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440
04fff5f404fffb3404fff5f404f3fff404ffff8404fffff4043ffff404ff8ff404fff55404faaaf404999994047ffff404fffff404f666f404f7fff404f7fff4
04fff9f404ff83f404ff15f40433fff404ff76f404fcfcf404fb3ff404f898f404fffd5404a9a9a404a999a404e77ff404f2f2f40467766404776ff40477fbb4
04ffa9f404f8e8f404f1d1f404f99ff404ff66f404ccccc404f3b3f4048eae8404ffdff404a9a9a4049aaa9404feee7404ff2ff404777764047776f404f77b34
04fa9ff404f888f4041d1df404ff99f404f8fff404cdcdc404f33b34048eae84045dfff404aaaaa404a999a404fefef4042f2f24046776540488877404fbb334
0499fff404ff8ff404d1dff404fff99404fffff404ddddd404ff333404f8e8f40455fff404fa9af404faaaf404f5f5f404f222f404f665f4048ff88404bb3ff4
00444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440
04f8f8f404f88ff404fdcdf404fafff40422522404f555f404fffff404f6fff404f555f404f776f4048eff64047bbb7404fffff404ffcff404ff5ff404ff6ff4
04ff8ff404886e8404ccccc404aadff4045555540456665404f2f2f404f6fff4041111140475656404f8e6f404bbbbb404fffef404fcccf404ff3ff404f9aff4
0418f814048668e404f8c8f404fd55f40425222404566654042e2e2404f5fff404f111f40465656404ff67f404bbbbb404f58e8404ccddd404f333f404f6ff64
0411f114048888e404fc8cf404dddd54045555540456665404efefe404f5665404ff1ff404f776f404f6f67404bbbbb404f58f8404f5f5f404f2e2f4049af9a4
04fffff404f888f404fcccf4045555d40422252404f555f404f2ff2404ff55f404ff1ff404f555f404ffff64047bbb7404f5fff404ff5ff404f222f404fffff4
00444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440004444400044444000444440
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00444440444444400044444044444440004444404444444000444440444444400044444044444440004444404444444000444440444444400044444044444440
0446666466666440044111141111144004422224222224400443333433333440044eeee4eeeee44004477774777774400444444444444440044ffffffffff440
046466646666464004141114111141400424222422224240043433343333434004e4eee4eeee4e40047477747777474004f4444444444f400444ffffffff4440
046646646664664004114114111411400422422422242240043343343334334004ee4ee4eee4ee40047747747774774004ff44444444ff4004444ffffff44440
046664646646664004111414114111400422242422422240043334343343334004eee4e4ee4eee40047774747747774004fff444444fff40044444ffff444440
046666446466664004111144141111400422224424222240043333443433334004eeee44e4eeee40047777447477774004ffff4444ffff400444444ff4444440
0044444046666640004444404111114000444440422222400044444043333340004444404eeeee40004444404777774000fffff04fffff400044444044444440
046666644666664004111114411111400422222442222240043333344333334004eeeee44eeeee40047777744777774004fffff44fffff400444444444444440
046666466466664004111141141111400422224224222240043333433433334004eeee4ee4eeee40047777477477774004ffff4444ffff400444444ff4444440
046664666646664004111411114111400422242222422240043334333343334004eee4eeee4eee40047774777747774004fff444444fff40044444ffff444440
046646666664664004114111111411400422422222242240043343333334334004ee4eeeeee4ee40047747777774774004ff44444444ff4004444ffffff44440
046466666666464004141111111141400424222222224240043433333333434004e4eeeeeeee4e40047477777777474004f4444444444f400444ffffffff4440
0446666666666440044111111111144004422222222224400443333333333440044eeeeeeeeee44004477777777774400444444444444440044ffffffffff440
04444444444444400444444444444440044444444444444004444444444444400444444444444440044444444444444004444444444444400444444444444440
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001230000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045660000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000089ab0000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cdef0000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03356e6f030303030303030303030303030303030303030303034e4f03030303030303030345030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03037e7f0303141503030303030318190303030303031c1d03035e5f0303242503030303035528290303030303032c2d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03030303030303030303030303030303030303030303030303030c0303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03030c0303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03030e0f0303121303030303034416170303030303031a1b03032e2f0303222303030303030326270303030303032a2b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03031e1f030303030303030303540303030303030303030303343e3f03030303030303030303030303030303030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
