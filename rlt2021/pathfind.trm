global Class, V2 // core.trm

var Grid = Class{
	method construct() {
		self.set = {}
	},

	method add(pos, val) {
		self.set[pos[1]] = self.set[pos[1]] || {}
		self.set[pos[1]][pos[2]] = val
	},

	method get(pos) {
		return self.set[pos[1]] && self.set[pos[1]][pos[2]]
	},
}

global fn pathfind(s, t, blocks) {
	var frontier = {s}
	var came_from = Grid()

	var i = 0
	while (#frontier > 0) {
		i += 1
		printh(i)
		var current = frontier[1]
		deli(frontier, 1)

		if (current == t) {
			break
		}

		var n = current - V2(1, 0)
		if (!came_from:get(n) && !blocks(n)) {
			add(frontier, n)
			came_from:add(n, current)
		}
		n = current + V2(1, 0)
		if (!came_from:get(n) && !blocks(n)) {
			add(frontier, n)
			came_from:add(n, current)
		}
		n = current - V2(0, 1)
		if (!came_from:get(n) && !blocks(n)) {
			add(frontier, n)
			came_from:add(n, current)
		}
		n = current + V2(0, 1)
		if (!came_from:get(n) && !blocks(n)) {
			add(frontier, n)
			came_from:add(n, current)
		}
	}

	if (!came_from:get(t)) {
		printh("Failed pathfinding")
		return null
	}

	printh("Found path")
	var path = {t}
	while (path[1] != s) {
		add(path, came_from:get(path[1]), 1)
	}
	return path
}
