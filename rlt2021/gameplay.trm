global Class // core.trm
global GameMap // map.trm
global fov_map, message, player, entities // state.trm
global pathfind // pathfind.trm

global fn getBlockingEntitiesAt(dx) {
	for (e in all(entities)) {
		if (e.blocks && e.pos == dx) {
			return e
		}
	}
}

global Fighter = Class{
	method construct(hp, defence, power) {
		self.max_hp = hp
		self.hp = hp
		self.defence = defence
		self.power = power
	},
}

global BasicMonster = Class{
	method takeTurn() {
		if (fov_map:get(self.owner.pos)) {
			if (self.owner:distanceTo(player) > 1) {
				self.owner:moveTowards(player.pos)
			} else if (player.fighter.hp > 0) {
				message = "The "..self.owner.name.." hits you."
			}
		}
	},
}

fn blocks(pos) {
	return GameMap:isBlocked(pos)
}

global Entity = Class{
	method construct(pos, sprite, name, blocks, fighter, ai) {
		self.pos = pos
		self.sprite = sprite
		self.name = name
		self.blocks = blocks
		self. fighter = fighter
		self.ai = ai

		if (self.fighter) {
			self.fighter.owner = self
		}
		if (self.ai) {
			self.ai.owner = self
		}
	},

	method move(dx) {
		self.pos = dx
	},

	method moveTowards(tpos, entities) {
		var path = pathfind(self.pos, tpos, blocks)
		if (path && #path >= 3 && !getBlockingEntitiesAt(path[2]:unpack())) {
			self:move(path[2])
		}
	},

	method distanceTo(other) {
		return #(other.pos - self.pos)
	},

	method draw() {
		spr(self.sprite, (self.pos * 8):unpack())
	},
}
