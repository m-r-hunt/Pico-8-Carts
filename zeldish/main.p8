pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
#include px9-3.p8:1
#include palettes.p8:0

vec2mt={
	__add=function(v1,v2)
		return vec2(v1.x+v2.x,v1.y+v2.y)
	end,
	__sub=function(v1,v2)
		return vec2(v1.x-v2.x,v1.y-v2.y)
	end,
	__mul=function(s,v)
		return vec2(s*v.x,s*v.y)
	end,
	__div=function(v,s)
		return vec2(v.x/s, v.y/s)
	end,
	__len=function(self)
		return sqrt(self.x*self.x+self.y*self.y)
	end,
	__eq=function(v1,v2)
		return v1.x==v2.x and v1.y==v2.y
	end,
	floored = function(self)
		return vec2(flr(self.x),flr(self.y))
	end,
	tostring=function(v)
		return "vec2("..v.x..","..v.y..")"
	end,
	copy=function(v)
		return vec2(v.x,v.y)
	end,
}
vec2mt.__index=vec2mt
function vec2(x,y)
	return setmetatable({x=x,y=y},vec2mt)
end

overworldgfx=0
overworldflags=%0x30fe
overworldmap=%0x30fc
underworldgfx=%0x30fa
underworldflags=%0x30f8
underworldmap=%0x30f6

world=""

function load_overworld()
	reload(0x4300,overworldgfx,0x1b00)
	px9_decomp(0,0,0x4300,sget,sset)
	reload(0x3000,overworldflags,0x50)
	reload(0x4300,overworldmap,0x1b00)
	px9_decomp(0,0,0x4300,mget,mset)
	pal(overworld,1)
	world="overworld"
end
function load_underworld()
	reload(0x4300,underworldgfx,0x1b00)
	px9_decomp(0,0,0x4300,sget,sset)
	reload(0x3000,underworldflags,0x50)
	reload(0x4300,underworldmap,0x1b00)
	px9_decomp(0,0,0x4300,mget,mset)
	pal(underworld,1)
	world="underworld"
end

function new_game()
	load_overworld()
	pl=make_actor(64,2,2)
	pl.frames=4
	screen=vec2(0,0)
end

function init_gameplay()
end

actor={}
function make_actor(k, x, y)
	a={
		k = k,
		pos=vec2(x,y),
		dx =vec2(0,0),
		frame = 0,
		t = 0,
		friction = 0.15,
		bounce  = 0.3,
		frames = 2,
		dim=vec2(0.4,0.4),
	}
	add(actor,a)
	return a
end

function solid(x, y)
	val=mget(x, y)
	return fget(val, 1)
end


function solid_area(x,y,w,h)
	return 
		solid(x-w,y-h) or
		solid(x+w,y-h) or
		solid(x-w,y+h) or
		solid(x+w,y+h)
end

function solid_actor(a, dx, dy)
	for a2 in all(actor) do
		if a2 != a then
		
			local x=(a.pos.x+dx) - a2.pos.x
			local y=(a.pos.y+dy) - a2.pos.y
			
			if ((abs(x) < (a.dim.x+a2.dim.x)) and (abs(y) < (a.dim.h+a2.dim.h))) then
				-- moving together?
				-- this allows actors to
				-- overlap initially 
				-- without sticking together    

				-- process each axis separately

				-- along x
				if (dx != 0 and abs(x) < abs(a.pos.x-a2.pos.x)) then
					v=abs(a.dx.x)>abs(a2.dx.x) and a.dx.x or a2.dx.x
					a.dx.x,a2.dx.x = v,v
					--local ca=
					-- collide_event(a,a2) or
					-- collide_event(a2,a)
					return true
				end
				
				-- along y
				if (dy != 0 and abs(y) <
					   abs(a.pos.y-a2.pos.y)) then
					v=abs(a.dx.y)>abs(a2.dx.y) and 
					  a.dx.y or a2.dx.y
					a.dx.y,a2.dx.y = v,v
					--local ca=
					-- collide_event(a,a2) or
					-- collide_event(a2,a)
					return true
				end
				
			end
		end
	end
	return false
end

function solid_a(a,dx,dy)
	if solid_area(a.pos.x+dx,a.pos.y+dy,a.dim.x,a.dim.y) then
		return true
	end
	return solid_actor(a,dx,dy)
end

function move_actor(a)
	-- only move actor along x
	-- if the resulting position
	-- will not overlap with a wall
	if not solid_a(a,a.dx.x,0) then
		a.pos.x += a.dx.x
	else
		a.dx.x *= -a.bounce
	end

	-- ditto for y
	if not solid_a(a,0,a.dx.y) then
		a.pos.y += a.dx.y
	else
		a.dx.y *= -a.bounce
	end

	-- apply friction
	-- (comment for no inertia)
	a.dx.x *= (1-a.friction)
	a.dx.y *= (1-a.friction)

	-- advance one frame every
	-- time actor moves 1/4 of
	-- a tile
	a.frame += abs(a.dx.x) * 4
	a.frame += abs(a.dx.y) * 4
	a.frame %= a.frames

	a.t += 1
end

function control_player(pl)
	accel = 0.05
	if (btn(0)) pl.dx.x -= accel 
	if (btn(1)) pl.dx.x += accel 
	if (btn(2)) pl.dx.y -= accel 
	if (btn(3)) pl.dx.y += accel 
end

function update_gameplay()
	control_player(pl)
	foreach(actor, move_actor)
	local screenp=vec2(screen.x*16,screen.y*15)

	--todo: Nice transition
	if pl.pos.x<screenp.x-2/8 then
		trans_start=screen:copy()
		screen.x-=1
		change_mode("screentrans")
	end
	if pl.pos.x>screenp.x+16+2/8 then
		trans_start=screen:copy()
		screen.x+=1
		change_mode("screentrans")
	end
	if pl.pos.y<screenp.y-2/8 then
		trans_start=screen:copy()
		screen.y-=1
		change_mode("screentrans")
	end
	if pl.pos.y>screenp.y+15+2/8 then
		trans_start=screen:copy()
		screen.y+=1
		change_mode("screentrans")
	end
end

function draw_actor(a)
	local sx = (a.pos.x * 8) - 4
	local sy = (a.pos.y * 8) - 4
	spr(a.k + a.frame, sx, sy)
end

function draw_world(screen_pos)
	clip(0,0,128,120)
	--game world
	local bg=world=="overworld" and 13 or 5
	rectfill(0,0,128,128,bg)
	camera(screen_pos.x*16*8,screen_pos.y*15*8)
	map(0,0,0,0,128,64)
	foreach(actor,draw_actor)
end

function draw_gameplay()
	camera()
	cls(15)

	draw_world(screen)

	clip(0,120,128,128)
	camera()
	--ui
end

trans_duration=15

function init_screentrans()
	transt=0
end

function update_screentrans()
	transt+=1
	if transt>trans_duration then
		change_mode("gameplay")
	end
end

--quadratic easing in/out
function ease(t,b,c,d)
	t/=d/2
	if (t < 1) return c/2*t*t + b
	t-=1
	return -c/2 * (t*(t-2) - 1) + b
end

function draw_screentrans()
	camera_pos=trans_start+ease(transt,0,1,trans_duration)*(screen-trans_start)

	camera()
	cls(15)

	draw_world(camera_pos)

	clip(0,120,128,128)
	camera()
	print(ease(transt,0,1,15),0,121,2)

end


modes={}
mode=""
function mode(name,u,d,i)
	modes[name]={u,d,i}
end
function change_mode(new)
	mode=new
	if modes[mode][3] then
		modes[mode][3]()
	end
end
function _init()
	new_game()
	change_mode("gameplay")
end
function _update()
	modes[mode][1]()
end
function _draw()
	modes[mode][2]()
end
mode("gameplay",update_gameplay,draw_gameplay,init_gameplay)
mode("screentrans",update_screentrans,draw_screentrans,init_screentrans)

__gfx__
ffffff0fff73af31c6703ac4aad1db7dd51163d9c2783c312c1c9bbe264efee77e7fd813659555ad1bacafa3b1d6ed7ae4437edb1f3c3c5bfec7e06e8f786cd6
94e852934eb4278c19b909cb7104c226fe3a9742f0ef8d2f74c085e1121e9c37ff4c01c06113854e9060b8c19d31697ea529d037c0d342327cf110293204206d
3cb7377390978c3608d081f50c87836ea401b4005e102298f5a2f345e78b04c227070830b4fa909304c7d42808f27c2c2bf78f322611c6ef8f09c269cf32b0ff
0a9aacab04206b806b8c1b972af759448c6278c7b7f794ac3c2456789c4a23ef042286442e920c1002c31e7c09102cf216f952934c27ed78583045e460429846
2119c4279cf88022994ef16e1e3e8367b19846163b36c7e1ee76fef173712e41e0f80fbd05ac8ce1edef19f50ceb4088dfff961452a59f7ceff3cb0073fff17c
3b42b8cf4a71ff23e3a1e4eff7becf9c5cdc5c5cdc8b8b8f8ff1466cfdcbc9cf6cf6cbcfd9fc1cfcc9cd0ef73cffd049fff7f9ebc1cb17eb931bfffbbbf16bff
8fffbbcbe0cbcffff66cfff57e2fb0efffb37172fff793afb1fff78df24ef3efffeaf7e4b1ffffb52d3ff1946b29662fff793c099782ffff89fffff60f80f748
0fff7839486ef0701efff4be3edb9fffff167e8134adb29cfff9d9ba000048136cffffc261f7482a420000cfffd4569cf1648c423b050ffff239c4e70bfff3db
b2f78429119423229464429fff3acbbed13c1381efff7e0fffffffffffff98f3839f14ea3efffd7c5cf2cf18fffff0010effffb049397fffffb0c10cffff7183
9797effffb0404effffb0cf3cf0cf1faf3e2fc5eebc579f7e27e5eabcf1797f2fe5e78bcf079f5e2ffc5948b02fcf271717179d5271717179d5a71717171ffff
fffff811000020002020000000000000000000000000200000000000000000000000000000002020200000000000000000000000000020202000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffff0fff71e9ff384002982601e80f41b03dc65d48954d12e84ac33dadffff740f708f30cf10ef00f708f30cf10ef00f352b33ddfff7de10e9074e
afe47efff7d448737c17a3efff27e5f4eef1e4f7cffff787e79f7e1ffcf52f70ffffe6f3df5fbdffff72caff5e03cf1cfff1de7fd7b878f17c5df3f7df77fff7
bdbf5e66f3ffdfbf2cfffff93fff7edf1fffffb42ffffa8f98f30cf11efff61f70fffffffff192ff387f852ef09fffbbe7efffff70e898fff3fcffffffff700e
ff1cfffd2eff1cf3cfffb2e72e88d3cffff4ef0efffffffffff28cf2cfffd4effffb58f30cf10ef00f708f30cf10ef00f708fffffffffff902fffffb00ffffff
0fff73af3148cc1255ab963feff90eb746d3e88e5e1ead02e351d81efff45eb33c5787ec3fc9f486fb7fd0c387f612b08fff709b80f3464e78f30f437d3f6b94
479bc80afb0e80fff712742cdb40fb01c1dcbea62d72848061f78979c40cfff30bf369ed2fc1c11a707ff27c4a147631b9f521e90ffff02b483b9fe310361e1b
d20bf674ec832ebfffb12f3d7fbcf39ef2cf0fce79f3e788f78c872390c11780c1fff7a02f8d3bf542e4c584294216cffffae1f97f84ec7674f882dbc5c3ffff
2b93ff9a8f7effff30ac48fffbf9c1f830ffffdbb3edfae8fff7f597f78a0efffb7619f5e1b7abfffbf07e4ffffe769ffffffffffffffff3088bc5793f2fd5eb
bcd79fe2fe5edbcf079f7e2ffc5ef9bcf379f7e2ffc5c5c5c5a7179d5279c5e9b4e2e2e2e2e2effffffff1220000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffff0fff716d2cffb9fff3b2fffffd03390fff
ffff3058fffffffffff40bcffffffffffffffffb0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ac052c05fd0304038402
__map__
0000000000b0bd001111cccc000008000020220020222202dddddddd3d3dd3d300000000000000000000000000000000000000000000000000000000000000000000000000bbbb0bcccc6c11008008000072770242444424ddddddddb3b33b3b0000000000000000000000000000000000000000000000000000000000000000
00077000d0ddbbdd6661cc16008088002077ff2742777424dddddbddd3b33d3d00000000000000000000000000000000000000000000000000000000000000000070070030d1dd3d1111c61c0088880072f7ff2f42744724ddbdbddd33b33d330000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c802cc014201
