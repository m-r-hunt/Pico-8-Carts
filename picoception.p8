pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--picoception v1.1
--(c) 2018 max hunt (cc by-sa)

--memory constants
frame_size=64
frame_line=frame_size/2
frame_total_size=64*64/2
frame_base=0x0300

max_frames=8
trans_base=frame_base-max_frames*16

screen_line=128/2
vram_base=0x6000
screen_frame_base=vram_base+32*screen_line+32/2

scratch_base=vram_base

frames_base=6
brush_base=64

autoplay_byte=0x0

--global variables
cur_frame=0

curs_x=32
curs_y=32

last_mx=0
last_my=0
last_mb=0

transitions={
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
 {8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
}

playing=false
out_of_playing=false

cur_col=12

cur_brush=1

ui={}

labels={
 {0,0,"frames"},
 {41,2,"play"},
 {84,2,"cart save"},
 {88,10,"autoplay"},
 {52,18,"save to clipboard"},
 {44,25,"load from clipboard"},
 {104,34,"copy"},
 {100,42,"paste"},
 {100,50,"clear"},
 {100,58,"buckt"},
 {96,106,"brush"},
}

function _init()
 --memset(frame_base,0x0,max_frames*frame_total_size)
 for i=0x300,0x300+8*frame_total_size do
  --poke(i,flr(rnd(255)))
 end
 
 poke(0x5f2d,1)--magic mouse addr
 last_mx=stat(32)
 last_my=stat(33)
 
 ui={
  {31, 31, 66, 66,edit,draw_edit},
  {0,  frames_base,  9,  65,frame,draw_frame},
  {0,  112,128,9, cols,draw_cols},
  {0,  121,128,8, trans,draw_trans},
  {32, 0,  8,  8, play,draw_play},
  {120,0,  8,  8, csave,draw_csave},
  {120,8,  8,  8, autoplay,draw_autoplay},
  {120,16,  8,  8, clipsave,draw_clipsave},
  {120,24, 8,  8, clipload,draw_clipload},
  {120,32, 8,  8, framecopy,draw_framecopy},
  {120,40, 8,  8, framepaste,draw_framepaste},
  {120,48, 8,  8, clearframe,draw_clearframe},
  {120,56, 8,  8, fill,draw_fill},
  {116,brush_base, 12,  48,brush,draw_brush}
 }
 
 --load transitions
 local idx=0
 for t in all(transitions) do
  for tt,_ in pairs(t) do
   t[tt]=peek(trans_base+idx)
   idx+=1
  end
 end
 
 --autoplay
 if peek(autoplay_byte)~=0 then
  playing=true
 end
end

function copy_frame_to_screen(edit)
 local base=vram_base
 if (edit) base=screen_frame_base
 for i=0,frame_size-1 do
  memcpy(base+i*screen_line,frame_base+cur_frame*frame_total_size+i*frame_line,frame_line)
 end
end

function copy_frame_from_screen()
 for i=0,frame_size-1 do
  memcpy(frame_base+cur_frame*frame_total_size+i*frame_line,screen_frame_base+i*screen_line,frame_line)
 end
end

function _update60()
 if (btn(0)) curs_x-=1
 if (btn(1)) curs_x+=1
 if (btn(2)) curs_y-=1
 if (btn(3)) curs_y+=1
 
 if (stat(32)~=last_mx) curs_x=stat(32) last_mx=stat(32)
 if (stat(33)~=last_my) curs_y=stat(33) last_my=stat(33)
 
 curs_x=mid(0,curs_x,127)
 curs_y=mid(0,curs_y,127)
 
 if playing then
  copy_frame_to_screen(false)
  if btnp(4) or (stat(34)==1 and last_mb~=1) then
   local clicked=pget(curs_x/2,curs_y/2)
   if transitions[cur_frame+1][clicked+1]~=8 then
    cur_frame=transitions[cur_frame+1][clicked+1]
   end
  end
  if btnp(5) or (stat(34)==2 and last_mb~=2) then
   playing=not playing
   out_of_playing=true
  end
 else
  if not out_of_playing then
   click()
  else
   out_of_playing=(stat(34)~=0 or btn(5))
  end
 end
 
 last_mb=stat(34)
end

function edit(lpressed,ldown,rpressed,rdown)
 if ldown or rdown then
  copy_frame_to_screen(true)
  local col=cur_col
  if rdown then
   col=0
  end
  if cur_brush>0 then
   circfill(curs_x,curs_y,cur_brush,col)
  elseif cur_brush==0 then
   pset(curs_x,curs_y,col)
  end
  
 if (lpressed or rpressed) and cur_brush<0 then
   --flood fill/paint bucket
   --not super fast,could be optimised?
   local q={{curs_x,curs_y}}
   local c=pget(curs_x,curs_y)
   if c~=col then
    pset(curs_x,curs_y,col)
    while #q>0 do
     local px=q[1]
     del(q,px)
     if (pget(px[1]-1,px[2])==c) pset(px[1]-1,px[2],col) add(q,{px[1]-1,px[2]})
     if (pget(px[1]+1,px[2])==c) pset(px[1]+1,px[2],col) add(q,{px[1]+1,px[2]})
     if (pget(px[1],px[2]-1)==c) pset(px[1],px[2]-1,col) add(q,{px[1],px[2]-1})
     if (pget(px[1],px[2]+1)==c) pset(px[1],px[2]+1,col) add(q,{px[1],px[2]+1})
    end
   end
  end
  copy_frame_from_screen()
 end
end

function frame(lpressed,ldown,rpressed,rdown)
 if lpressed then
  cur_frame=mid(0,flr((curs_y-frames_base)/8),7)
 end
end

function cols(lpressed,ldown,rpressed,rdown)
 if lpressed then
  cur_col=flr(curs_x/8)
 end
end

function trans(lpressed,ldown,rpressed,rdown)
 if lpressed then
  transitions[cur_frame+1][flr(curs_x/8)+1]=(transitions[cur_frame+1][flr(curs_x/8)+1]+1)%9
 elseif rpressed then
  transitions[cur_frame+1][flr(curs_x/8)+1]=(transitions[cur_frame+1][flr(curs_x/8)+1]-1)%9
 end
end

function framecopy(lpressed,ldown,rpressed,rdown)
 if lpressed then
  memcpy(0x4300,frame_base+cur_frame*frame_total_size,frame_total_size)
 end
end

function framepaste(lpressed,ldown,rpressed,rdown)
 if lpressed then
  memcpy(frame_base+cur_frame*frame_total_size,0x4300,frame_total_size)
 end
end

function clearframe(lpressed,ldown,rpressed,rdown)
 if lpressed then
  memset(frame_base+cur_frame*frame_total_size,0x00,frame_total_size)
 end
end

function fill(lpressed,ldown,rpressed,rdown)
 if lpressed then
  cur_brush=-1
 end
end

function play(lpressed,ldown,rpressed,rdown)
 if lpressed then
 	cur_frame=0
  playing=true
 end
end

function autoplay(lpressed,ldown,rpressed,rdown)
 if lpressed then
  poke(autoplay_byte,bnot(peek(autoplay_byte)))
 end
end

function click()
 local lpressed=btnp(4) or (stat(34)==1 and last_mb~=1)
 local ldown=btn(4) or stat(34)==1
 local rpressed=btnp(5) or (stat(34)==2 and last_mb~=2)
 local rdown=btn(5) or stat(34)==2
 for u in all(ui) do
  if curs_x>=u[1] and curs_x<u[1]+u[3] and curs_y>=u[2] and curs_y<u[2]+u[4] then
   u[5](lpressed,ldown,rpressed,rdown)
  end
 end
end

function brush(lpressed,ldown,rpressed,rdown)
 if lpressed then
  cur_brush=flr((curs_y-brush_base)/9)
  cur_brush=mid(0,cur_brush,4)
 end
end

function draw_edit()
  rect(0,0,65,65,7)
  copy_frame_to_screen(true)
end

function draw_frame()
  for i=0,max_frames-1 do
   rect(0,i*8,8,i*8+8,7)
   print(i+1,2,i*8+2,7)
  end
  for i=0,max_frames-1 do
   if (i==cur_frame) rect(0,i*8,8,i*8+8,11)
  end
end

function draw_cols()
  for i=0,15 do
   rectfill(i*8,0,i*8+8,8,i)
   if cur_col==i then
    rect(i*8,1,i*8+7,8,(i+3)%16)
   end
  end
  line(0,0,128,0,7)
end

function draw_trans()
  for i=0,15 do
   rect(i*8,0,i*8+7,8,7)
   if transitions[cur_frame+1][i+1]~=8 then
    print(transitions[cur_frame+1][i+1]+1,i*8+3,2,7)
   end
  end
end

function draw_csave()
  spr(1,0,0)
end

function draw_clipsave()
  spr(2,0,0)
end

function draw_clipload()
  spr(3,0,0)
end

function draw_framecopy()
 spr(9,0,0)
end

function draw_framepaste()
 spr(10,0,0)
end

function draw_clearframe()
 spr(8,0,0)
end

function draw_fill()
 if cur_brush==-1 then
  pal(7,11)
  pal(11,7)
 end
 spr(11,0,0)
 pal()
end

function draw_brush()
 rectfill(0,0,128,128,1)
  for i=0,4 do
   if cur_brush==i then
    pal(7,11)
    pal(11,7)
   else
    pal()
   end
   --rect(0,i*9,128,i*9+7,7)
   circfill(6,i*9+4,i,7)
  end
  pal()
end

function draw_play()
 spr(12,0,0)
end

function draw_autoplay()
 if peek(autoplay_byte)~=0 then
  pal(7,11)
 end
 spr(13,0,0)
 pal()
end

function _draw()
 cls()
 
 if playing then
  poke(0x5f2c,3) --set 64x64 mode
  copy_frame_to_screen(false)
  
  local curs,ox,oy,sw,sh=4,0,0,8,8
  if transitions[cur_frame+1][pget(curs_x/2,curs_y/2)+1]~=8 then
   curs=6
   ox=-3
   sw=9
   sh=10
  end
  sspr(curs*8,0,sw,sh,curs_x/2+ox,curs_y/2+oy,sw,sh)
 else
  poke(0x5f2c,0) --set 64x64 mode
  
  for u in all(ui) do
   clip(u[1],u[2],u[3],u[4])
   camera(-u[1],-u[2])
   u[6]()
  end
  
  clip()
  camera()
  
  for l in all(labels) do
   print(l[3],l[1],l[2],7)
  end
  
  local curs,ox,oy,sw,sh=4,0,0,8,8
  for u in all(ui) do
   if curs_x>=u[1] and curs_x<u[1]+u[3] and curs_y>=u[2] and curs_y<u[2]+u[4] then
    if u==ui[1] then
     curs=5
     ox=-3
     oy=-3
    else
     curs=6
     ox=-3
     sw=9
     sh=10
    end
   end
  end
  sspr(curs*8,0,sw,sh,curs_x+ox,curs_y+oy,sw,sh)
 
  --[[debug
  for u in all(ui) do
   --rect(u[1],u[2],u[1]+u[3]-1,u[2]+u[4]-1,10)
  end
  print("brush"..cur_brush,0,96,7)
  print("mem:"..stat(0),0,104,7)
  print("cpu:"..stat(1),0,112,7)
  print(stat(7).."fps",0,120,7)
  --]]
 end
end
-->8
-- px8 by zep
-- gfx,sfx,map ression

-- compression parameters
p={}
p.cbits  = 1   -- max:7
p.remap = true


-----------------------------
-- decompression
-----------------------------

function remap(i,w,h)
 local sx=flr((i/64)%(w/8))
 local sy=flr((i/64)/(w/8))
 local x=(i%8)
 local y=flr(flr(i%64)/8)
 return (sx*8+x)+(sy*8+y)*w
end


function decomp(src, px,py,xget,xset)

 local pn={}
 src-=1 
 local bit=256
 local b=0
 
 function getval(bits)
  val=0
  for i=0,bits-1 do

   --get next bit from stream
   if (bit==256) then
    bit=1
    src+=1
    byte=peek(src)
   end
   if band(byte,bit)>0 then
    val+=shl(1,i)
   end
   bit*=2
   
  end
  return val
 end
 
 -- read header
 
 local w = getval(8)
 local h = getval(8)
 local cbits = getval(3)
 local rmp = getval(1) 
 local maxci = getval(8)
 local bpp = getval(3)+1
 local clist={}
 for i=0,maxci do
  clist[i]=getval(bpp)
 end
 
 -- spans
 
 local i = 0
 local span = 0
 
 while (i < w*h) do

  -- span length 
  local bl = 1
  while getval(1)==0 do
   bl += 1 end
  
  local minv=shl(1,bl-1)
  if (bl==1) minv=0
  
  local len=
   getval(max(1,bl-1))+minv+1

  for j=0,len-1 do
  
   local i1 = i
   
   if (rmp==1) i1=remap(i,w,h)
   
   x = px+(i1)%w
   y = py+flr(i1/w)
   
   -- predict colour
   
   local t=xget(x+0,y-1)/16
   local l=xget(x-1,y+0)*16
   if (y==py) t=0
   if (x==px) l=0
   
   pc=pn[t+l] or pn[t] or pn[l]
   
   if (span%2 == 0) then
    -- raw literal
    
    local index=0
    
    repeat
     v=getval(cbits)
     index += v
    until (v < shl(1,cbits)-1)
    
    local pindex=999
    for i=0,maxci do
     if (pc==clist[i]) pindex=i
    end
    
    if (pindex <= index) index+=1
    
    col = clist[index]
    
    -- move to front
    for i=index,1,-1 do
     clist[i]=clist[i-1]
    end
    clist[0] = col
    
   else
    -- predicted

    col = pc
    
   end
   
   xset(x,y,col)
      
   -- adjust predictions
   
   pn[t]=col
   pn[l]=col
   pn[t+l]=col
   
   i += 1
  end
  span += 1
  
 end
 

end


-----------------------------
-- compression
-----------------------------

function comp(x0,y0,w,h,dest,xget)

 local dest0 = dest
 local pn={}
 local dat={}
 local dat2={}
 local i=0
 
 local byte=0
 local bit=1
 
 function putbit(bval)
  if (bval) byte+=bit
  poke(dest, byte)
  bit*=2
  if (bit==256) then
   bit=1 byte=0
   dest += 1			
  end
 end
 
 function putval(val, bits)
  if (bits == 0) return
  for i=0,bits-1 do
   putbit(band(val,shl(1,i))>0)
  end
 end
 
 function putsplen(len)
  -- how many bits?
  blen=1				
  while (shl(1,blen) <= len) 
   do blen+=1 end
  putval(0,(blen-1))
  putval(1,1)
  
  minv=shl(1,blen-1)
  if (blen==1) minv=0
  			
  putval(len-minv,
   max(1,blen-1))
 
 end
 
 -- 1. generate list of
 -- colour values and predictions
 
 for i=0,w*h-1 do
 
   i1=i
   if (p.remap) i1=remap(i,w,h)
   
   x = x0+(i1%w)
   y = y0+flr(i1/w)
   
   local t=xget(x+0,y-1)/16
   local l=xget(x-1,y+0)*16
   if (y==y0) t=0
   if (x==x0) l=0
   c = xget(x,y)
   
   -- predict
   
   pc=nil

   if (pc==nil) pc=pn[t+l]
   if (pc==nil) pc=pn[t]
   if (pc==nil) pc=pn[l]
  
   -- first value never predicted
   if (i==0) pc=nil
     	
  	-- if could predict, set
  	-- flag 0x100
  	
  	if (pc == c) then
  	 dat[i] = c + 0x100
  	else
  	 dat[i] = c
  	end
  	
  	-- store prediction
  	dat2[i] = pc
  	
  	-- add predictions
   
   pn[t]=c
   pn[l]=c
   pn[t+l]=c
  
 end
 
 -- 3. starting indexes
 
 
 -- 3.1 write header
 
 putval(w,8)
 putval(h,8)
 putval(p.cbits,3)  
 
 if (p.remap) then
  putval(1,1)
 else
  putval(0,1)
 end
 
 
 -- 3.2 starting colour list
 -- (in order encountered)
 local clist={}
 local found={}
 local cols=0
 
 local maxcol=0
 
 for i=0,w*h-1 do
  local i1 = remap(i, w,h)
  local x = x0+(i1%w)
  local y = y0+flr(i1/w)
  local col=xget(x,y)
  if (not found[col]) then
   clist[cols]=col
   found[col]=true
   cols+=1
   maxcol=max(maxcol,col)
  end
 end
 
 -- calc bpp needed to store
 -- maxcol
 
 local bpp=1
 while (shl(1,bpp) <= maxcol) do
  bpp += 1
 end
 
 -- write colour list
 
 putval(cols-1,8) -- max 256
 putval(bpp-1,3) -- max 8
 for i=0,cols-1 do
  putval(clist[i],bpp)
 end
 
 -- 3.3 write spans
 
 len = w*h
 pos = 0
 
 p.spans=0
 p.indexes=0
 
 while (pos < len) do
  p.spans+=1
  
  -- calculate length of span
  
  slen=0 p2=pos
  
  if (dat[pos] >= 0x100) then
  
   -- span of predictions
   -- every item must be correct
   -- prediction
   
   while (p2 < len and
          dat[p2] >= 0x100) do
    p2 += 1
   end
   
   slen = p2-pos
  
  else
  
   -- span of non-predicted
   -- colour list indexes
   
   while (
          p2 < len and
          (
           dat[p2] < 0x100 or
           p2 == len-1 
          )) do
    p2 += 1
   end
   
   slen = p2-pos
   
  end
  
  		
  -- write span length
  putsplen(slen-1)
  
  				
  if (dat[pos] < 0x100) then
  
   -- span of colour indices
   
   for j=0,slen-1 do
   
    local col=dat[pos+j]%256
    local pcol=dat2[pos+j]
    
    -- find position in clist
    local index
    local pindex=100
    for i=0,cols-1 do
     if(clist[i]==col) index=i
     if(clist[i]==pcol) pindex=i
    end
    
    -- move to front
    for i=index,1,-1 do
     clist[i]=clist[i-1]
    end
    clist[0]=col
    
    -- if predicted colour
    -- was earlier in list, can
    -- subtract one
    
    if (pindex < index) index-=1
    
    -- write the index	
    
    v=index -- amount to write
    
    local maxval=shl(1,p.cbits)-1
    
    while(v>=0) do
     w=min(maxval, v)
     putval(w, p.cbits)
     v -= maxval
    end
    
    p.indexes += 1
   end
   
  end
  
  pos += slen
 end
 
 return dest-dest0 + 1

end

-->8
--serialization

function csave(lpressed,ldown,rpressed,rdown)
 if lpressed then
 --save transitions
 local idx=0
 for t in all(transitions) do
  for tt in all(t) do
   poke(trans_base+idx,tt)
   idx+=1
  end
 end
  cstore()
 end
end

--implement save to/from clipboard
--using zep's px8

function bggetf(base)
 return function(x,y)
  local addr=base+flr(y)*32+flr(flr(x)/2)
  local val=peek(addr)
  if (x%2)!=0 then
   val=shr(val,4)
  end
   return band(val,0b1111)
 end
end

function bgsetf(base)
 return function(x,y,c)
  local addr=base+flr(y)*32+flr(flr(x)/2)
  local val=peek(addr)
  local mask=0b11110000
  if x%2!=0 then
   c=shl(c,4)
   mask=0b00001111
  end
  val=bor(band(val,mask),c)
  poke(addr,val)
 end
end

--save/restore hardware lets us
--have bigger clipsaves without
--crashing
function save_hardware_state()
 hardware_state={}
 for i=0x5f00,0x5f80 do
  hardware_state[i]=peek(i)
 end
end

function load_hardware_state()
 for i=0x5f00,0x5f80 do
  poke(i,hardware_state[i])
 end
end

function clipsave(lpressed,ldown,rpressed,rdown)
 if lpressed then
  --save_hardware_state()
  local out=""
  local mem=scratch_base
  for t in all(transitions) do
   for tt in all(t) do
    out=out..tt.." "
   end
  end
  local comps=""
  for i=0,max_frames-1 do
   local clen=comp(0,0,frame_size,frame_size,mem,bggetf(frame_base+i*frame_total_size))
   if clen>0 and clen<frame_total_size then
    out=out..clen.." "
    for i=mem,mem+clen-1 do
     comps=comps..peek(i).." "
    end
   else
    out=out.."0".." "
    local a=frame_base+i*frame_total_size
    for i=a,a+frame_total_size-1 do
    comps=comps..peek(i).." "
    end
   end
  end
  printh(out..comps,"@clip")
  --load_hardware_state()
 end
end

function clipload(lpressed,ldown,rpressed,rdown)
 if lpressed then
  --save_hardware_state()
  local ins=stat(4)
  local strings={}
  local last=0
  local buf=""
  while #ins~=0 do
   if sub(ins,0,1)==" " then
    add(strings,buf)
    buf=""
   else
    buf=buf..sub(ins,0,1)
   end
   ins=sub(ins,2)
  end
  
  local idx=1
  for t in all(transitions) do
   for tt,_ in pairs(t) do
    t[tt]=tonum(strings[idx])
    idx+=1
   end
  end
  local clens={
   tonum(strings[idx]),
   tonum(strings[idx+1]),
   tonum(strings[idx+2]),
   tonum(strings[idx+3]),
   tonum(strings[idx+4]),
   tonum(strings[idx+5]),
   tonum(strings[idx+6]),
   tonum(strings[idx+7])
  }
  idx+=8
  for f=0,max_frames-1 do
   if clens[f+1]~=0 then
    for i=idx,idx+clens[f+1]-1 do
     poke(scratch_base+i-idx,tonum(strings[i]))
    end
    idx+=clens[f+1]
    decomp(scratch_base,0,0,bggetf(frame_base+f*frame_total_size),bgsetf(frame_base+f*frame_total_size))
   else
    for i=idx,idx+frame_total_size-1 do
     poke(frame_base+f*frame_total_size+i-idx,tonum(strings[i]))
    end
    idx+=frame_total_size
   end
  end
  --load_hardware_state()
 end
end
__gfx__
00000000777777770000070700000707110000000001000000010000000000007777777777777777777777777777777777777777777777770000000077777777
00000000717117170000007000000070171000000017100000171000000000007711117171111111711111117111111170000007711111110000000077777777
00000000717117170070077700700777177100000100010000171101000000007171171171177111717111717cc1171170770007711771110000000077777777
0000000071777717007707170770071717771000170007100017171710000000711771117171171171711171c17cc71170777707717117110000000077777777
0000000071111117777777177777771717777100010001000117777710000000711771117171111171171711717cc71170777707717777110000000077777777
00000000711771170077071707700717177110000017100017177777100000007171171171711711711717117177771170770007717117110000000077777777
00000000711111170070071700700717011710000001000001777777100000007711117171177111711171117111111170000007711111110000000077777777
00000000777777770000077700000777000000000000000000117771000000007777777777777777777777777777777777777777777777770000000077777777
00000000444844440000000000000000000000000000000000017771000000000000000000000000000000000000000000000000000000000000000000000000
00000000444344440000000000000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000000
80808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080
__label__
77707770777077707770077000000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000077777777
70007070707077707000700000000000700000070000000000000000000000000000000000000000000000000000000000000000000000000000000071711717
77007700777070707700777000000000707700070777070007770707000000000000000000000000000007707770777077700000077077707070777071711717
70007070707070707000007000000000707777070707070007070707000000000000000000000000000070007070707007000000700070707070700071777717
70007070707070707770770000000000707777070777070007770777000000000000000000000000000070007770770007000000777077707070770071111117
00000000000000000000000000000000707700070700070007070007000000000000000000000000000070007070707007000000007070707770700071177117
bbbbbbbbb00000000000000000000000700000070700077707070777000000000000000000000000000007707070707007000000770070700700777071111117
b0000000b00000000000000000000000777777770000000000000000000000000000000000000000000000000000000000000000000000000000000077777777
b0770000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777
b0070000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000071111111
b0070000b00000000000000000000000000000000000000000000000000000000000000000000000000000007770707077700770777070007770707071177111
b0070000b00000000000000000000000000000000000000000000000000000000000000000000000000000007070707007007070707070007070707071711711
b0777000b00000000000000000000000000000000000000000000000000000000000000000000000000000007770707007007070777070007770777071777711
b0000000b00000000000000000000000000000000000000000000000000000000000000000000000000000007070707007007070700070007070007071711711
bbbbbbbbb00000000000000000000000000000000000000000000000000000000000000000000000000000007070077007007700700077707070777071111111
70000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777
70777000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000707
70007000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070
70777000700000000000000000000000000000000000000000000770777070707770000077700770000007707000777077707770077077707770770000700777
70700000700000000000000000000000000000000000000000007000707070707000000007007070000070007000070070707070707070707070707000770717
70777000700000000000000000000000000000000000000000007770777070707700000007007070000070007000070077707700707077707700707077777717
70000000700000000000000000000000000000000000000000000070707077707000000007007070000070007000070070007070707070707070707000770717
77777777700000000000000000000000000000000000000000007700707007007770000007007700000007707770777070007770770070707070777000700717
70000000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777
70777000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000707
70007000700000000000000000000000000000000000700007707770770000007770777007707770000007707000777077707770077077707770770000000070
70077000700000000000000000000000000000000000700070707070707000007000707070707770000070007000070070707070707070707070707000700777
70007000700000000000000000000000000000000000700070707770707000007700770070707070000070007000070077707700707077707700707007700717
70777000700000000000000000000000000000000000700070707070707000007000707070707070000070007000070070007070707070707070707077777717
70000000700000000000000000000000000000000000777077007070777000007000707077007070000007707770777070007770770070707070777007700717
77777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700717
70000000700000000000000000000007777777777777777777777777777777777777777777777777777777777777777770000000000000000000000000000777
70707000700000000000000000000007055555555555555555555555555555555555555555555555555555555555555070000000000000000000000077777777
70707000700000000000000000000007555555555555555555555555555555555555555555555555555555555555555570000000000000000000000071111111
70777000700000000000000000000007555555555555555555555555555555555555555555555555555555555555555570000000077007707770707071177111
70007000700000000000000000000007555555555555555555555555555555555555555555555555555555555555555570000000700070707070707071711711
70007000700000000000000000000007555555555555555555555555555555555555555555555555555555555555555570000000700070707770777071711111
700000007000000000000000000000075555555ddddddddddddddddddddddddddddddddddddddddddddddddddddd555570000000700070707000007071711711
777777777000000000000000000000075555dddddddddddddddddddddddddddddddddddddddddddddddddddddddd555570000000077077007000777071177111
700000007000000000000000000000075555dddddddddddddddddddddddddddddddddddddddddddddddddddddddd555570000000000000000000000077777777
707770007000000000000000000000075555dddddddddddddddddddddddddddddddddddddddddddddddddddddddd555570000000000000000000000077777777
707000007000000000000000000000075555dddddddddddddddddddddddddddddddddddddddddddddddddddddddd555570000000000000000000000071111111
707770007000000000000000000000075555dddddd6666666666666dddddddddddddddddddddddddddddddddddd5555570007770777007707770777071711171
700070007000000000000000000000075555ddddd666666666666666ddddddddddddddddddddddddddddddddddd5555570007070707070000700700071711171
707770007000000000000000000000075555ddddd666666666666666ddddddddddddddddddddddddddddddddddd5555570007770777077700700770071171711
700000007000000000000000000000075555ddddd666666666666666ddddddddddddddddddddddddddddddddddd5555570007000707000700700700071171711
777777777000000000000000000000075555ddddd66666666666666dddddddddddddddddddddddddddddddddddd5555570007000707077000700777071117111
700000007000000000000000000000075555ddddd6666666666dddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077777777
707000007000000000000000000000075555ddddd66666666dddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077777777
707000007000000000000000000000075555ddddd6666666ddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077111171
707770007000000000000000000000075555ddddd6666666ddddddddddddddddddddddddddddddddddddddddddd5555570000770700077707770777071711711
7070700070000000000000000000000755555dddd6666666ddddddddddddddddddddddddddddddddddddddddddd5555570007000700070007070707071177111
7077700070000000000000000000000755555dddd666666dddddddddddddddddddddddddddddddddddddddddddd5555570007000700077007770770071177111
7000000070000000000000000000000755555dddd66666ddddddddddddddddddddddddddddddddddddddddddddd5555570007000700070007070707071711711
7777777770000000000000000000000755555dddd66666ddddddddddddddddddddddddddddddddddddddddddddd5555570000770777077707070707077111171
7000000070000000000000000000000755555ddddd666dddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077777777
7077700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077777777
7000700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000071111111
7000700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd555557000777070700770707077707cc11711
7000700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd55555700070707070700070700700c17cc711
7000700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd55555700077007070700077000700717cc711
7000000070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570007070707070007070070071777711
7777777770000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570007770077007707070070071111111
7000000070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000000077777777
7077700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111111111
7070700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111111111
7077700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111111111
7070700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111111111
7077700070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111711111
7000000070000000000000000000000755555dddddddddddddddddddddddddddddddddddddddddddddddddddddd5555570000000000000000000111111111111
7777777770000000000000000000000755555ddddddddddddddddddddddddddddddddddddddddddddddddd555555555570000000000000000000111111111111
0000000000000000000000000000000755555ddddddddddddddddd55555555555555555555555555555555555555555570000000000000000000111111111111
00000000000000000000000000000007555555555855555555555555555555555555555555555555555555555555555570000000000000000000111111111111
00000000000000000000110000000007555555558885555555555555555555555555555555555555555555555555555570000000000000000000111111111111
00000000000000000000171000000007555555585858555555555555555555555555555555555555555555555555555570000000000000000000111111111111
00000000000000000000177100000007555555585558555555555555555555555555555555555555555555555500005570000000000000000000111111111111
00000000000000000000177710000007555555558885555555555505550000000555000000000055500000055500005570000000000000000000111111b11111
0000000000000000000017777100000755555500000005550000000555000000055500000000005550000005500000557000000000000000000011111bbb1111
00000000000000000000177110000007555555000000055500000005550000000050000000000555000000555000005570000000000000000000111111b11111
00000000000000000000011710000007555550000000555500000005550000000555000000000555000000555000005570000000000000000000111111111111
00000000000000000000000000000007555550000000555000000005550000000555000000000050000000050000005570000000000000000000111111111111
00000000000000000000000000000007555555555500555000000055500000000550000000000555000000555000005570000000000000000000111111111111
00000000000000000000000000000007555555555555555555000555500000005550000000005550000000555000005570000000000000000000111111111111
00000000000000000000000000000007555555555555555555555555555555555555555555555550000005550000005570000000000000000000111111111111
00000000000000000000000000000007555555555555555555555555555555555555555555555555555555555555555570000000000000000000111117771111
00000000000000000000000000000007555500000000555055555555555555555555555555555555555555555555555570000000000000000000111177777111
00000000000000000000000000000007555500000005555000000555005505555555555555555555555555555555555570000000000000000000111177777111
00000000000000000000000000000007555500000005550000005550000000555000000005550000000055500000005570000000000000000000111177777111
00000000000000000000000000000007555500000005550000005550000005555000000055550000000055500000005570000000000000000000111117771111
00000000000000000000000000000007555000000055550000055500000055550000000555500000000555000000005570000000000000000000111111111111
00000000000000000000000000000007555000000555500000555000000555500000005555000000005555000000005570000000000000000000111111111111
00000000000000000000000000000007555000005555000055550000005555000000555550000000055550000000005570000000000000000000111111111111
00000000000000000000000000000007555000055550055555555555555550000555555555555555555505055555505570000000000000000000111117771111
00000000000000000000000000000007555500555555555555555555555555555555555555555555555555555555555570000000000000000000111177777111
00000000000000000000000000000007055555555555555555555555555555555555555555555555555555055555505570000000000000000000111777777711
00000000000000000000000000000007055555550055500000000005555555555000055505050505555550000000005070000000000000000000111777777711
00000000000000000000000000000007777777777777777777777777777777777777777777777777777777777777777770000000000000000000111777777711
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111177777111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111117771111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111117771111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111777777711
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111777777711
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117777777771
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117777777771
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000117777777771
70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077707770707007707070111777777711
07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070707070707070007070111777777711
00700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077007700707077707770111117771111
07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070707070707000707070111111111111
70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077707070077077007070111111111111
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111111111111
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd11111111ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd1eeeeee1ffffffff
00000000111111112222222233333333444444445555555566666666777777778888888899999999aaaaaaaabbbbbbbbccccccccdddddddd11111111ffffffff
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
70000007700000077000000770000007700000077000000770000007700000077000000770000007700000077000000770000007700000077000000770000007
70000007700000077000000770000007700000077000000770000007700000077007770770000007700000077000000770000007700000077000000770000007
70000007700000077000000770000007700000077000000770000007700000077000070770000007700000077000000770000007700000077000000770000007
70000007700000077000000770000007700000077000000770000007700000077007770770000007700000077000000770000007700000077000000770000007
70000007700000077000000770000007700000077000000770000007700000077007000770000007700000077000000770000007700000077000000770000007
70000007700000077000000770000007700000077000000770000007700000077007770770000007700000077000000770000007700000077000000770000007

__sfx__
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000

